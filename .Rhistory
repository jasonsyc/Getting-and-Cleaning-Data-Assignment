help()
q()
a
R
source("http://bioconductor.or/biocLite.R")
find.package("devtools")
install.package("devtools")
install.package("devtools")
install.packages("KernSmooth")
library(kernSmooth)
library("kernSmooth")
library("kernsmooth")
library ("KernSmooth")
library ("KernSmooth")
install.packages("swirl")
library(swirl)
swirl()
5+7
x<-5+7
x
y<-z-3
y<-x-3
y
q()
library(swirl)
swirl()
swirl()
q()
library(swirl)
install_from_swirl("Sequences of Numbers")
swirl()
swirl()
install_from_swirl("Sequences_of_Numbers")
swirl()
swirl()
swirl()
swirl()
q
q()
library(swirl)
uninstall_course("R Programming")
uninstall_course("swirldev-swirl courses-0abced2")
uninstall_course("Vectors")
install_from_swirl("R Programming")
swirl()
q
swirl()
uninstall_course("Sequence of Numbers:)
1
00
:q
|
?
sfds
libray(swirl)
library(swirl)
install_from_swirl("R Programming")
swirl()
uninstall_course("R Programming")
uninstall_course("R Programming Alt")
uninstall_course("Sequences of Numbers")
swirl()
1:20
pi:10
15:1
?:
?':'
seq(1,20)
seq(0,10,0.5)
seq(0,10,by=0.5
1
seq(0,10, by=0.5)
seq(5, 10, length=30)
my_seq<- seq(5,10, length=30)
length()
length(30)
length(my_seq)
1:length(my_seq)
seq(along.with = my_seq)
seq_along(my_seq)
rep(0, times = 40)
rep(c(0,1,2), times=10)
rep(c(0, 1, 2), each = 10)
q()
source("pollutantmean.R")
library("swirl")
swirl()
q()
library(swirl)
swirl()
head
head(flags)
dim(flags)
class(flags)
cls_list <- lapply(flags, class)
cls_list
class(cls_list)
as.character(cls_list)
sapply(cls_list)
sapply(flags,class)
cls_vect <- sapply(flags, class)
class(cls_vect)
sum(flags$orange)
flag_colors <- flags[, 11:17]
head(flag_colours)
head(flag_colors)
lapply(flag_colours,class)
lapply(flag_colors,class)
lapply(flag_colors, sum)
sapply(flag_colors, sum)
sapply(flag_colors, mean)
flag_shapes <- flags[, 19:23]
lapply(flag_shapes,range)
sapply(flag_shapes,range)
shape_mat <- sapply(flag_shapes, range)
shape_mat
class(shape_mat)
unique(c(3, 4, 5, 5, 5, 6, 6))
unique_vals <- lapply(flags,unique)
unique_vals
length(unique_vals)
sapply(unique_vals,length)
sapply(unique_vals,unique)
sapply(flags, unique)
lapply(unique_vals, function(elem) elem[2])
sapply(flags,unique)
vapply(flags, unique, numeric(1))
ok()
sapply(flags, class)
vapply(flags, class, character(1))
?tapply
table(flags$landmass)
table(flags$animate)
tapply(flags$animate, flags$landmass, mean)
tapply(flags$population, flags$red, summary)
tapply(flags$animate, flags$landmass, mean)
tapply(flags$population, flags$landmass, summary)
ls(plants)
ls()
?ls()
class(plants)
dim(plants)
nrow(plants)
ncol(plants)
object.size(plants)
names(plants)
head(plants)
head(10row)
head(row,10)
head(plants,10)
tail(plants,15)
summary(plants)
table(plants$Active_Growth_Period)
str(plants$Active_Growth_Period)
str(plants)
?sample
sample(1:6, 4, replace = TRUE)
sample(1:6, 4, replace = TRUE)
sample(1:20, 10, replace = FALES)
sample(1:20, 10, replace = FALSE)
sample(1:20, 10)
LETTERS()
LETTERS
sample(LETTERS)
flips <- prob = c(0.3, 0.7)
flips
flips <- sample(1:2, 100, c(0.3, 0.7))
flips<-sample(1:2, 100, replace = FALSE)
flips <- sample(1:2, 100, replace = FALSE)
skip()
flips <- sample(c(0,1), 100, replace = TRUE, prob = c(0.3, 0.7))
flips
sum(flips)
?rbinom()
?rbinom
rbinom(1, size = 100, prob = 0.7)
flips2 <- rbinom(1, size = 100, prob = 0.7)
flips2 <- rbinom(100, size = 1, prob = 0.7)
flips
flips2
sum(1)
sum(flips)
sum(flips,1)
sum(flips2,1)
sum(flips2)
?rnorm
rnorm(10)
rnorm(10, mean=100, sd=25)
?rpois
rpois(5, 10)
replicate(100, rpois(5, 10))
my_pois <- replicate(100, rpois(5, 10))
my_pois
colmeans(replicate)
my_pois(colmeans)
cm <- replicate(100, colmeans(5, 10))
skip()
hist(cm)
?sample
sample(1:6, 4, replace = TRUE)
sample(1:6, 4, replace = TRUE)
sample(1:20, 10)
LETTERS
sample(LETTERS)
flips <- sample(c(0,1), 100, replace = TRUE, prob = c(0.3, 0.7))
flips
sum(flips)
?rbinom
rbinom(1, size = 100, prob = 0.7)
flips2 <- rbinom(100, size = 1, prob = 0.7)
flips
flips2
sum(flips2)
?rnorm
rnorm(10)
rnorm(10, mean=100, sd=25)
?rpois
rpois(5)
rpois(5, 10)
my_pois <- replicate(100, rpois(5, 10))
my_pois
cm <- colMeans(my_pois)
hist(cm)
d1 <- Sys.Date()
class(d1)
d1
unclass(d1)
print d1
d1
d2<-as.Date("1969-01-01")
unclass()
unclass(d2)
Sys.time()
t1<-Sys.time()
t1
class(t1)
unclass(t1)
t2<-as.POSIXlt(Sys.time())
class(t2)
t2
unclass(t2)
str(unclass(t2))
t2$min
weekdays(d1)
month(t1)
months(t1)
quarters(t2)
striptime(t3)
striptime(t3)
t3<-"October 17, 1986 08:24"
strptime(t3, "%B %d, %Y %H:%M")
strptime(t3, "%B %d, %Y %H:%M")
t4 <- strptime(t3, "%B %d, %Y %H:%M")
t4
class(t4)
Sys.time() > t1
Sys.time() - t1
difftime(Sys.time(), t1, units = 'days')
exit
q()
setwd("~/R")
run_analysis.R
source("run_analysis.R")
source("run_analysis.R")
source("run_analysis.R")
source("run_analysis.R")
source("run_analysis.R")
source("run_analysis.R")
source("run_analysis.R")
source("run_analysis.R")
source("run_analysis2.R")
source("run_analysis2.R")
source("run_analysis.R")
source("run_analysis.R")
source("run_analysis.R")
setwd("~/GitHub/Getting and Cleaning Data Assignment")
source("run_analysis.R")
